name: Deploy - Direct to Vercel

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Build and test first
  build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    # Frontend
    - name: Frontend Build & Test
      working-directory: ./holistica-frontend
      run: |
        npm ci
        npm run test:stable
        npm run build
      env:
        CI: true
        
    # Upload build artifacts
    - name: Upload build
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: holistica-frontend/build
        retention-days: 1

  # Deploy using fresh approach
  deploy-vercel:
    runs-on: ubuntu-latest
    needs: [build-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    # Download build artifacts
    - name: Download build
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: holistica-frontend/build
        
    # Deploy with simplified config
    - name: Deploy to Vercel
      working-directory: ./holistica-frontend
      run: |
        echo "Installing Vercel CLI..."
        npm install -g vercel@latest
        
        echo "Removing any existing Vercel config..."
        rm -f .vercel/project.json
        
        echo "Deploy directly to existing project..."
        vercel --prod --yes \
          --token "${{ secrets.VERCEL_TOKEN }}" \
          --scope "${{ secrets.VERCEL_ORG_ID }}" \
          --confirm

  # Deploy to Render
  deploy-render:
    runs-on: ubuntu-latest
    needs: [build-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Trigger Render Deployment
      run: |
        curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
        echo "‚úÖ Render deployment triggered"

  # Summary
  deployment-summary:
    runs-on: ubuntu-latest
    needs: [deploy-vercel, deploy-render]
    if: always()
    
    steps:
    - name: Deployment Status
      run: |
        echo "üéâ Deployment Pipeline Results:"
        echo "Frontend (Vercel): ${{ needs.deploy-vercel.result }}"
        echo "Backend (Render): ${{ needs.deploy-render.result }}"
        
        if [[ "${{ needs.deploy-vercel.result }}" == "success" && "${{ needs.deploy-render.result }}" == "success" ]]; then
          echo "‚úÖ All deployments successful!"
          echo "üåê App is live: https://202550-pruebas-software-grupo4.vercel.app"
        else
          echo "‚ö†Ô∏è Some deployments may have issues. Check logs above."
        fi
