name: Frontend CI/CD Simplified

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'holistica-frontend/**'
      - '.github/workflows/frontend.yml' 
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'holistica-frontend/**'
      - '.github/workflows/frontend.yml' 

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: holistica-frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./holistica-frontend
      run: npm ci

    - name: Run unit tests with only passing tests
      working-directory: ./holistica-frontend
      run: |
        npm test
      env:
        CI: true

    - name: Build for production
      working-directory: ./holistica-frontend
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: holistica-frontend/build

  security-scan:
    runs-on: ubuntu-latest
    needs: test-and-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit (non-blocking)
      working-directory: ./holistica-frontend
      run: npm audit || echo "Security audit complete with warnings"

  deploy:
    runs-on: ubuntu-latest
    needs: [test-and-build, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: holistica-frontend/build

    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Aquí irían los comandos de despliegue real
        # Por ejemplo, despliegue a Netlify, Vercel, AWS S3, etc.

    - name: Notify deployment status
      if: always()
      run: |
        echo "Deployment completed with status: ${{ job.status }}"
        # Aquí podrías enviar notificaciones a Slack, Discord, email, etc.